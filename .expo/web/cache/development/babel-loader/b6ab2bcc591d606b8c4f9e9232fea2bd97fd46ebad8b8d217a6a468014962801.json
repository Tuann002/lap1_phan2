{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport { Entypo } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    darkMode = _useState2[0],\n    setDarkMode = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentNumber = _useState4[0],\n    setCurrentNumber = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    lastNumber = _useState6[0],\n    setLastNumber = _useState6[1];\n  var buttons = ['C', 'DEL', 7, 8, 9, '*', 4, 5, 6, '-', 1, 2, 3, '+', 0, '.', '='];\n  function calculator() {\n    try {\n      var result = eval(currentNumber).toString();\n      setCurrentNumber(result);\n    } catch (error) {\n      setCurrentNumber('Error');\n    }\n  }\n  function handleInput(buttonPressed) {\n    if (typeof buttonPressed === 'number' || buttonPressed === '.') {\n      Vibration.vibrate(35);\n      setCurrentNumber(currentNumber + buttonPressed);\n    } else if (buttonPressed === '+' || buttonPressed === '-' || buttonPressed === '*' || buttonPressed === '/') {\n      Vibration.vibrate(35);\n      var lastChar = currentNumber.slice(-1);\n      if (lastChar !== '+' && lastChar !== '-' && lastChar !== '*' && lastChar !== '/') {\n        setCurrentNumber(currentNumber + buttonPressed);\n      }\n    } else {\n      switch (buttonPressed) {\n        case 'DEL':\n          Vibration.vibrate(35);\n          setCurrentNumber(currentNumber.slice(0, -1));\n          break;\n        case 'C':\n          Vibration.vibrate(35);\n          setLastNumber('');\n          setCurrentNumber('');\n          break;\n        case '=':\n          Vibration.vibrate(35);\n          setLastNumber(currentNumber + '=');\n          calculator();\n          break;\n      }\n    }\n  }\n  return _jsxs(View, {\n    style: darkMode ? styles.containerDark : styles.container,\n    children: [_jsx(View, {\n      style: styles.result,\n      children: _jsx(Text, {\n        style: styles.resultText,\n        children: currentNumber\n      })\n    }), _jsx(View, {\n      style: styles.buttons,\n      children: buttons.map(function (button, index) {\n        return _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return handleInput(button);\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: button\n          })\n        }, index);\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  containerDark: {\n    flex: 1,\n    backgroundColor: '#222'\n  },\n  result: {\n    flex: 2,\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    backgroundColor: '#333'\n  },\n  resultText: {\n    fontSize: 40,\n    color: 'white',\n    padding: 20\n  },\n  buttons: {\n    flexGrow: 3,\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  button: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 0.5,\n    borderColor: '#666'\n  },\n  buttonText: {\n    fontSize: 32,\n    padding: 20,\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TouchableOpacity","Vibration","Entypo","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","darkMode","setDarkMode","_useState3","_useState4","currentNumber","setCurrentNumber","_useState5","_useState6","lastNumber","setLastNumber","buttons","calculator","result","eval","toString","error","handleInput","buttonPressed","vibrate","lastChar","slice","style","styles","containerDark","container","children","resultText","map","button","index","onPress","buttonText","create","flex","backgroundColor","justifyContent","alignItems","fontSize","color","padding","flexGrow","flexDirection","flexWrap","borderWidth","borderColor"],"sources":["C:/Users/HP/Desktop/Lab1_phan2/Lap1_phan2/src/Main.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Vibration } from 'react-native';\r\nimport { Entypo } from '@expo/vector-icons';\r\n\r\nexport default function App() {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [currentNumber, setCurrentNumber] = useState('');\r\n  const [lastNumber, setLastNumber] = useState('');\r\n\r\n  const buttons = ['C', 'DEL', 7, 8, 9, '*', 4, 5, 6, '-', 1, 2, 3, '+', 0, '.', '='];\r\n\r\n  function calculator() {\r\n    try {\r\n      let result = eval(currentNumber).toString();\r\n      setCurrentNumber(result);\r\n    } catch (error) {\r\n      setCurrentNumber('Error');\r\n    }\r\n  }\r\n\r\n  function handleInput(buttonPressed) {\r\n    if (typeof buttonPressed === 'number' || buttonPressed === '.') {\r\n      Vibration.vibrate(35);\r\n      setCurrentNumber(currentNumber + buttonPressed);\r\n    } else if (buttonPressed === '+' || buttonPressed === '-' || buttonPressed === '*' || buttonPressed === '/') {\r\n      Vibration.vibrate(35);\r\n      const lastChar = currentNumber.slice(-1);\r\n      if (lastChar !== '+' && lastChar !== '-' && lastChar !== '*' && lastChar !== '/') {\r\n        setCurrentNumber(currentNumber + buttonPressed);\r\n      }\r\n    } else {\r\n      switch (buttonPressed) {\r\n        case 'DEL':\r\n          Vibration.vibrate(35);\r\n          setCurrentNumber(currentNumber.slice(0, -1));\r\n          break;\r\n        case 'C':\r\n          Vibration.vibrate(35);\r\n          setLastNumber('');\r\n          setCurrentNumber('');\r\n          break;\r\n        case '=':\r\n          Vibration.vibrate(35);\r\n          setLastNumber(currentNumber + '=');\r\n          calculator();\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={darkMode ? styles.containerDark : styles.container}>\r\n      <View style={styles.result}>\r\n        <Text style={styles.resultText}>{currentNumber}</Text>\r\n      </View>\r\n      <View style={styles.buttons}>\r\n        {buttons.map((button, index) => (\r\n          <TouchableOpacity\r\n            key={index}\r\n            style={styles.button}\r\n            onPress={() => handleInput(button)}\r\n          >\r\n            <Text style={styles.buttonText}>{button}</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  containerDark: {\r\n    flex: 1,\r\n    backgroundColor: '#222',\r\n  },\r\n  result: {\r\n    flex: 2,\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n    backgroundColor: '#333',\r\n  },\r\n  resultText: {\r\n    fontSize: 40,\r\n    color: 'white',\r\n    padding: 20,\r\n  },\r\n  buttons: {\r\n    flexGrow: 3,\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderWidth: 0.5,\r\n    borderColor: '#666',\r\n  },\r\n  buttonText: {\r\n    fontSize: 32,\r\n    padding: 20,\r\n    color: 'white',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}